DROP TABLE IF EXISTS person, book, book_copy;

CREATE TABLE IF NOT EXISTS person
(
    person_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    person_media_id varchar(300) NOT NULL UNIQUE,
    name      VARCHAR(30)  NOT NULL,
    age       INTEGER CHECK (age >= 0 AND age <= 120) NOT NULL,
    email     VARCHAR(255) UNIQUE NOT NULL,
    address   VARCHAR(100)  NOT NULL
);

INSERT INTO person (person_media_id, name, age, email, address)
VALUES
    ('EDC00000001', 'Иван Иванов', 25, 'ivan@example.com', 'Ukraine, Odessa, 123456'),
    ('EDC00000002', 'Анна Петрова', 32, 'anna@example.com', 'Russia, Санкт-Петербург, 123456'),
    ('EDC00000003', 'Сергей Коваленко', 41, 'sergey@example.com', 'Ukraine, Kiev, 222222');

CREATE TABLE IF NOT EXISTS book
(
    book_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title   VARCHAR(100) NOT NULL,
    author  VARCHAR(100) NOT NULL,
    year    INT CHECK (year > 1900) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO book (title, author, year)
VALUES
    ('java', 'hortsman', 2020),
    ('frontend', 'prokopenko', 2025);


CREATE TABLE IF NOT EXISTS book_copy
(
    copy_id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    book_id    BIGINT REFERENCES book(book_id) ON DELETE CASCADE,
    person_id  BIGINT REFERENCES person(person_id) ON DELETE SET NULL,
    is_available BOOLEAN DEFAULT TRUE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Вставка тестовых данных для копий книг
INSERT INTO book_copy (book_id, person_id, is_available)
VALUES
    (1, NULL, TRUE),
    (1, 2, TRUE),
    (2, NULL, TRUE);

CREATE INDEX IF NOT EXISTS idx_book_copy_book_id ON book_copy(book_id);
CREATE INDEX IF NOT EXISTS idx_book_copy_person_id ON book_copy(person_id);
